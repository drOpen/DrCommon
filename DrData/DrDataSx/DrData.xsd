<?xml version="1.0" encoding="utf-8"?>
<!--
    DrData.xsd - This XML Schema representation of data storage DrData in xml format, 1.1, April 15, 201
    Copyright (c) 2013-2017 Kudryashov Andrey aka Dr
    Kudryashov Andrey <kudryashov.andrey at gmail.com>
  -->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="n">
    <xs:annotation>
      <xs:documentation>Hierarchy data warehouse</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="a" minOccurs="1" maxOccurs="1"/>
          <xs:element ref="n" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="n" type="xs:string" use="required" >
        <xs:annotation>
          <xs:documentation>Name of node. This attribute is required.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="t" type="xs:string" use="optional" default="">
        <xs:annotation>
          <xs:documentation>Type of node. This attribute is optional.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="r" type="xs:boolean" use="optional" default="false">
        <xs:annotation>
          <xs:documentation>Attribute exhibition on the root node. This attribute is optional and by default value is 'false'. This attribute information and is not used when creating an object.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="c" type="xs:int" use="optional" default="0" >
        <xs:annotation>
          <xs:documentation>Attribute informs about the number of children node. This attribute is optional and by default value is '0'. This attribute information and is not used when creating an object.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:anyAttribute processContents="skip" />
    </xs:complexType>
    <xs:unique name ="uniqNodeName">
      <xs:annotation >
        <xs:documentation >Checking the uniqueness of the name of the n on the same level</xs:documentation>
      </xs:annotation>
      <xs:selector xpath="./n"/>
      <xs:field xpath="@n"/>
    </xs:unique>
    <xs:unique name ="uniqAttributeName">
      <xs:annotation >
        <xs:documentation >Checking the uniqueness of the name of the Attribute on the same level</xs:documentation>
      </xs:annotation>
      <xs:selector xpath="./a"/>
      <xs:field xpath="@n"/>
    </xs:unique>
  </xs:element>

  <xs:element name="a">
    <xs:annotation>
      <xs:documentation>Data warehouse.</xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="i" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
      <xs:attribute name="n" type="xs:string" use="required" >
        <xs:annotation>
          <xs:documentation>Name of attribute. This attribute is required.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="t" type="ValueType" use="optional" >
        <xs:annotation>
          <xs:documentation>
            Type of value. If this attribute is not specified then attribute value is null. However, null attribute is not equals than type of value is null!
            (&quot;nullAttributeSample&quot;, null)  ---&gt;  &lt;a n=&quot;nullAttributeSample&quot;/&gt; &#44;
            (&quot;nullValueSample&quot;, new DDValue())  ---&gt;   &lt;a n=&quot;nullValueSample&quot; t=&quot;null&quot;/&gt; 
            are not the same
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="s" use="optional" default="0">
        <xs:annotation>
          <xs:documentation>Attribute informs about the size of value. This attribute is optional and by default value is '0'. This attribute information and is not used when creating an object.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:anyAttribute processContents="skip" />
    </xs:complexType>
  </xs:element>

  <xs:element name="i">
    <xs:annotation>
      <xs:documentation>Element of array.</xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:simpleType name="ValueType">
    <xs:annotation>
      <xs:documentation>Data type.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="System.Char"/>
      <xs:enumeration value="System.Char[]"/>
      <xs:enumeration value="System.String"/>
      <xs:enumeration value="System.String[]"/>
      <xs:enumeration value="System.Boolean"/>
      <xs:enumeration value="System.Boolean[]"/>
      <xs:enumeration value="System.String[]"/>
      <xs:enumeration value="System.Int32"/>
      <xs:enumeration value="System.Int32[]"/>
      <xs:enumeration value="System.Single"/>
      <xs:enumeration value="System.Single[]"/>
      <xs:enumeration value="System.Int64"/>
      <xs:enumeration value="System.Int64[]"/>
      <xs:enumeration value="System.DateTime"/>
      <xs:enumeration value="System.DateTime[]"/>
      <xs:enumeration value="System.Byte"/>
      <xs:enumeration value="System.Byte[]"/>
      <xs:enumeration value="System.Guid"/>
      <xs:enumeration value="System.Guid[]"/>
      <xs:enumeration value="null">
        <xs:annotation>
          <xs:documentation>type of null noties what value is null</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>