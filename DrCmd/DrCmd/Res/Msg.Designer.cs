//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DrCmd.Res {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Msg {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Msg() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DrCmd.Res.Msg", typeof(Msg).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot build restriction list and description as single string because the number of elements in these lists are not equal..
        /// </summary>
        internal static string CANNOT_BUILD_RESTRICTION_LIST_AND_DESCRIPTION {
            get {
                return ResourceManager.GetString("CANNOT_BUILD_RESTRICTION_LIST_AND_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot build restriction list and numeric value as single string because the number of elements in these lists are not equal..
        /// </summary>
        internal static string CANNOT_BUILD_RESTRICTION_LIST_AND_NUMERIC_VALUE {
            get {
                return ResourceManager.GetString("CANNOT_BUILD_RESTRICTION_LIST_AND_NUMERIC_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot build restriction list with values and description as single string because the number of elements in these lists are not equal..
        /// </summary>
        internal static string CANNOT_BUILD_RESTRICTION_LIST_AND_NUMERIC_WITH_DESCRIPTION {
            get {
                return ResourceManager.GetString("CANNOT_BUILD_RESTRICTION_LIST_AND_NUMERIC_WITH_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get specified command name..
        /// </summary>
        internal static string CANNOT_GET_COMMAND {
            get {
                return ResourceManager.GetString("CANNOT_GET_COMMAND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot parse &apos;{0}&apos; as type of value..
        /// </summary>
        internal static string CANNOT_PARSE_VALUE_AS_FLAG_OF_VALUE {
            get {
                return ResourceManager.GetString("CANNOT_PARSE_VALUE_AS_FLAG_OF_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot parse &apos;{0}&apos; as type of option..
        /// </summary>
        internal static string CANNOT_PARSE_VALUE_AS_TYPE_OF_OPTION {
            get {
                return ResourceManager.GetString("CANNOT_PARSE_VALUE_AS_TYPE_OF_OPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can not specify the type &apos;{0}&apos; without type &apos;{1}&apos;..
        /// </summary>
        internal static string CANNOT_SPECIFY_ONE_TYPE_WITHOUT_SECOND_TYPE {
            get {
                return ResourceManager.GetString("CANNOT_SPECIFY_ONE_TYPE_WITHOUT_SECOND_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified command &apos;{0}&apos; is disabled. You can not specify disabled command..
        /// </summary>
        internal static string COMMAND_IS_DISABLED {
            get {
                return ResourceManager.GetString("COMMAND_IS_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command name &apos;{0}&apos; is specified but it is not listed in the supported commands..
        /// </summary>
        internal static string COMMAND_IS_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("COMMAND_IS_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified command can not be null.
        /// </summary>
        internal static string COMMAND_IS_NULL {
            get {
                return ResourceManager.GetString("COMMAND_IS_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified command name can not be empty..
        /// </summary>
        internal static string COMMAND_NAME_IS_EMPTY {
            get {
                return ResourceManager.GetString("COMMAND_NAME_IS_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command name is not specified. Please specify the command name as the first argument. See Help about a list of allowed commands..
        /// </summary>
        internal static string COMMAND_NAME_IS_NOT_SPECIFIED {
            get {
                return ResourceManager.GetString("COMMAND_NAME_IS_NOT_SPECIFIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option with alias &apos;{0}&apos; is already specified in the command &apos;{1}&apos;..
        /// </summary>
        internal static string DUBLICATE_OPTION_ALIASES {
            get {
                return ResourceManager.GetString("DUBLICATE_OPTION_ALIASES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option with name &apos;{0}&apos; is already specified in the command &apos;{1}&apos;..
        /// </summary>
        internal static string DUBLICATE_OPTION_NAME {
            get {
                return ResourceManager.GetString("DUBLICATE_OPTION_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option &apos;{0}&apos; could be identified as the value not only from a list of restrictions, but also by their numeric value. In the setting of the number of elements in these lists are not equal. &apos;{1}&apos; is not equal &apos;{2}&apos;..
        /// </summary>
        internal static string ELEMENT_COUNT_IN_RESTRICTION_LIST_IS_NOT_EQUALS_OF_NUMERIC_LIST_COUNT {
            get {
                return ResourceManager.GetString("ELEMENT_COUNT_IN_RESTRICTION_LIST_IS_NOT_EQUALS_OF_NUMERIC_LIST_COUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In the setting of the number of elements in list of restrictions &apos;{1}&apos; are not equal to number of elements in list of their descriptions {2}&apos;..
        /// </summary>
        internal static string ELEMENT_COUNT_IN_RESTRICTION_LIST_IS_NOT_EQUALS_OF_RESTRICTIOM_DESCRIPTION_LIST {
            get {
                return ResourceManager.GetString("ELEMENT_COUNT_IN_RESTRICTION_LIST_IS_NOT_EQUALS_OF_RESTRICTIOM_DESCRIPTION_LIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The verification flags &apos;{0}&apos; type has another type than enum &apos;{1}&apos;..
        /// </summary>
        internal static string FLAG_TYPE_NOT_EQUALS_ANOTHER_ENUM_TYPE {
            get {
                return ResourceManager.GetString("FLAG_TYPE_NOT_EQUALS_ANOTHER_ENUM_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COMMAND.
        /// </summary>
        internal static string HELP_COMMAND {
            get {
                return ResourceManager.GetString("HELP_COMMAND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DESCRIPTION.
        /// </summary>
        internal static string HELP_DESCRIPTION {
            get {
                return ResourceManager.GetString("HELP_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EXAMPLE.
        /// </summary>
        internal static string HELP_EXAMPLE {
            get {
                return ResourceManager.GetString("HELP_EXAMPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OPTIONAL.
        /// </summary>
        internal static string HELP_OPTIONAL {
            get {
                return ResourceManager.GetString("HELP_OPTIONAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to REQUIRED.
        /// </summary>
        internal static string HELP_REQUIRED {
            get {
                return ResourceManager.GetString("HELP_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SYNOPSIS.
        /// </summary>
        internal static string HELP_SYNOPSIS {
            get {
                return ResourceManager.GetString("HELP_SYNOPSIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of attribute of restriction list should be array of integer. The current type &apos;{0}&apos; is incorrect..
        /// </summary>
        internal static string INCORRECT_TYPE_OF_RESTRICTION_LIST_AS_NUMERIC {
            get {
                return ResourceManager.GetString("INCORRECT_TYPE_OF_RESTRICTION_LIST_AS_NUMERIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option &apos;{0}&apos; in the command &apos;{2}&apos; is already specified as &apos;{1}&apos;..
        /// </summary>
        internal static string OPTION_ALREADY_SPECIFIED {
            get {
                return ResourceManager.GetString("OPTION_ALREADY_SPECIFIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option with name &apos;{0}&apos; has already been specified earlier. Option can not be specified more than once. If you want specify &apos;{0}&apos; as value you should be above use the special argument &apos;{1}&apos; forces an end of option-scanning regardless of the scanning mode. For switch back scanning mode use special argument &apos;{2}&apos;..
        /// </summary>
        internal static string OPTION_ALREADY_SPECIFIED_EARLY {
            get {
                return ResourceManager.GetString("OPTION_ALREADY_SPECIFIED_EARLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; in command &apos;{3}&apos; has value &apos;{1}&apos;. This option has type &apos;{2}&apos; and can not contain value..
        /// </summary>
        internal static string OPTION_CANNOT_CONTAIN_VALUE {
            get {
                return ResourceManager.GetString("OPTION_CANNOT_CONTAIN_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; in command &apos;{4}&apos; has value &apos;{1}&apos; and consisting of &apos;{2}&apos; items. This option has type &apos;{3}&apos; and can not contain more than one value..
        /// </summary>
        internal static string OPTION_CANNOT_CONTAINS_MORE_THAN_ONE_VALUE {
            get {
                return ResourceManager.GetString("OPTION_CANNOT_CONTAINS_MORE_THAN_ONE_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{1}&apos; for the command &apos;{0}&apos; depends on the option &apos;{2}&apos; which is not specified..
        /// </summary>
        internal static string OPTION_DEPENDS_ANOTHER_NOT_SPECIFIED_OPTION {
            get {
                return ResourceManager.GetString("OPTION_DEPENDS_ANOTHER_NOT_SPECIFIED_OPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option &apos;{0}&apos; in command &apos;{2}&apos; has incorrect value &apos;{1}&apos;..
        /// </summary>
        internal static string OPTION_HAS_INCORRECT_VALUE {
            get {
                return ResourceManager.GetString("OPTION_HAS_INCORRECT_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{1}&apos; for the command &apos;{0}&apos; is incongruous with the option &apos;{2}&apos; which is specified..
        /// </summary>
        internal static string OPTION_IS_INCONGRUOUS_WTH_ANOTHER_OPTION {
            get {
                return ResourceManager.GetString("OPTION_IS_INCONGRUOUS_WTH_ANOTHER_OPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contains the value &apos;{0} of the option without declaring itself options. Should be specified option name starting with symbol &apos;{1}&apos; and then  value of this option..
        /// </summary>
        internal static string OPTION_IS_NOT_SPECIFIED {
            get {
                return ResourceManager.GetString("OPTION_IS_NOT_SPECIFIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; in command &apos;{2}&apos; has not value. This option has type &apos;{1}&apos; and must contain value..
        /// </summary>
        internal static string OPTION_MUST_CONTAIN_VALUE {
            get {
                return ResourceManager.GetString("OPTION_MUST_CONTAIN_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This option supports only the following values: &apos;{0}&apos;..
        /// </summary>
        internal static string OPTION_SUPPORT_ONLY_FOLLOWING_VALUES {
            get {
                return ResourceManager.GetString("OPTION_SUPPORT_ONLY_FOLLOWING_VALUES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This option supports only the following values or their numerical value: &apos;{0}&apos;..
        /// </summary>
        internal static string OPTION_SUPPORT_ONLY_FOLLOWING_VALUES_OR_NUMERIC {
            get {
                return ResourceManager.GetString("OPTION_SUPPORT_ONLY_FOLLOWING_VALUES_OR_NUMERIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The symbol &apos;{0}&apos; at the beginning of the argument is reserved for option name and if you want specify &apos;{0}&apos; as value you should be above use the special argument &apos;{1}&apos; forces an end of option-scanning regardless of the scanning mode. For switch back scanning mode use special argument &apos;{2}&apos;.
        /// </summary>
        internal static string OPTION_SYMBOL_IS_SPECEFIED {
            get {
                return ResourceManager.GetString("OPTION_SYMBOL_IS_SPECEFIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option cannot have both incongruous types &apos;{0}&apos; and &apos;{1}&apos;..
        /// </summary>
        internal static string OPTION_TYPE_HAS_INCONGRUOUS_TYPES {
            get {
                return ResourceManager.GetString("OPTION_TYPE_HAS_INCONGRUOUS_TYPES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option &apos;{0}&apos; has the wrong type &apos;{1}&apos;..
        /// </summary>
        internal static string OPTION_TYPE_IS_WRONG {
            get {
                return ResourceManager.GetString("OPTION_TYPE_IS_WRONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option &apos;{0}&apos; has the wrong type &apos;{1}&apos;. Option cannot have both types &apos;{2}&apos; and &apos;{3}&apos; simultaneously..
        /// </summary>
        internal static string OPTION_TYPE_IS_WRONG_BOTH_TYPES {
            get {
                return ResourceManager.GetString("OPTION_TYPE_IS_WRONG_BOTH_TYPES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command &apos;{0}&apos; contains an option &apos;{1}&apos; in the attribute &apos;{2}&apos; which has reference to non-existent or disabled option &apos;{3}&apos; in this command..
        /// </summary>
        internal static string REFERENCE_TO_NON_EXISTEN_OPTION {
            get {
                return ResourceManager.GetString("REFERENCE_TO_NON_EXISTEN_OPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The required option &apos;{0}&apos; in command &apos;{1}&apos; isn&apos;t specified..
        /// </summary>
        internal static string REQUIRED_OPTION_IS_NOT_SPECIFIED {
            get {
                return ResourceManager.GetString("REQUIRED_OPTION_IS_NOT_SPECIFIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified option &apos;{0}&apos; is disabled for command &apos;{1}&apos;. You can not select a disabled option..
        /// </summary>
        internal static string SPECIFIED_OPTION_IS_DISABLED {
            get {
                return ResourceManager.GetString("SPECIFIED_OPTION_IS_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified option &apos;{0}&apos; is not allowed for command &apos;{1}&apos;..
        /// </summary>
        internal static string SPECIFIED_OPTION_IS_NOT_ALLOWED {
            get {
                return ResourceManager.GetString("SPECIFIED_OPTION_IS_NOT_ALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type &apos;{0}&apos; is not the type of enum..
        /// </summary>
        internal static string SPECIFIED_TYPE_IS_NOT_ENUM_TYPE {
            get {
                return ResourceManager.GetString("SPECIFIED_TYPE_IS_NOT_ENUM_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value type &apos;{0}&apos; is not supported as DDValue type..
        /// </summary>
        internal static string SPECIFIED_VALUE_TYPE_IS_NOT_SUPPORTED_BY_DDVALUE {
            get {
                return ResourceManager.GetString("SPECIFIED_VALUE_TYPE_IS_NOT_SUPPORTED_BY_DDVALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The left margin greater than the width of the text..
        /// </summary>
        internal static string TEXT_BUILDER_LEFT_MARGIN_GREATER_THAN_TEXT_WIDTH {
            get {
                return ResourceManager.GetString("TEXT_BUILDER_LEFT_MARGIN_GREATER_THAN_TEXT_WIDTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value of margin cannot be less than zero..
        /// </summary>
        internal static string TEXT_BUILDER_MARGIN_CANNOT_BE_LESS_THAN_ZERO {
            get {
                return ResourceManager.GetString("TEXT_BUILDER_MARGIN_CANNOT_BE_LESS_THAN_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The width of the text can not be less than or equal to zero..
        /// </summary>
        internal static string TEXT_BUILDER_TEXT_WIDTH_CANNOT_BE_LESS_THAN_ZERO {
            get {
                return ResourceManager.GetString("TEXT_BUILDER_TEXT_WIDTH_CANNOT_BE_LESS_THAN_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With the value type &apos;{0}&apos; cannot be specified more than any other types..
        /// </summary>
        internal static string WITH_THIS_TYPE_CANNOT_BE_SPECIFIED_MORE_THAN_OTHER_TYPES {
            get {
                return ResourceManager.GetString("WITH_THIS_TYPE_CANNOT_BE_SPECIFIED_MORE_THAN_OTHER_TYPES", resourceCulture);
            }
        }
    }
}
